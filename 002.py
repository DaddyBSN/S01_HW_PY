# Напишите программу для. проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z 
# Расшифровка этого выражения not (x[0] or x[1] or x[2] = not x[0] and not x[1] and not x[2] 
# Для всех значений предикат.

# Решение:
# число комбинаций для трех переменных равно 2^3 = 8
# эти комбинации соответствуют бинарному представлению десятичных чисел от 0 до 7
# в цикле переводим числа от 0 до 7 в двоичную систему
# далее с помощью replace заменяем символ b на 0.
# приравниваем и переводим в целочисленный тип данных к X третий элемент с конца, Y - второй, и Z - первый.
# содана логическая переменная result Ей присвоено значеие True.
# в цикле перемнной result присваивается значение конъюнкции result и равенства логических значений левой и правой частей выражения.

def answer ():
    result = True
    for n in range(0, 8):
        num = bin(n)
        num = num.replace('b', '0')
        X = int(num[-3])
        Y = int(num[-2])
        Z = int(num[-1])
        result = result and (not(X or Y or Z)) == ((not X) and (not Y) and (not Z))
    print(result)
answer()